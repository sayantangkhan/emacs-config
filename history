;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(goto-line-history extended-command-history TeX-macro-history reftex-cite-regexp-hist LaTeX-environment-history read-number-history org-read-date-history org-refile-history org-link--history org-capture--clipboards org-capture--prompt-history empty-history TeX-command-history helm-M-x-input-history evil-ex-history read-expression-history minibuffer-history))
(setq extended-command-history '("package-list-packages" "revert-buffer" "org-time-stamp" "package-install" "package-list-packages" "package-install" "version" "package-install" "package-list-packages" "package-install" "package-list-packages" "package-install"))
(setq TeX-macro-history '("eqref" "eqr"))
(setq reftex-cite-regexp-hist '("khan" "penner"))
(setq LaTeX-environment-history '("align" "al" "align*" "proof" "pr" "rem" "lemma" "lem"))
(setq org-read-date-history '("   "))
(setq org-refile-history '("Emacs" "Em" "Nix" "nix" "Ema" "Computing links" "Cycling" "Cy" "Programming Language Theory" "Prog" "Haskell" "Has" "cyc"))
(setq org-capture--prompt-history '("Creating desktop applications using Emacs" "Package management on MacOS with nix-darwin" "Geral Sussman loves Emacs" "Adding new string dtype to numpy"))
(setq TeX-command-history '("View" "V" "LatexMk"))
(setq helm-M-x-input-history '("pack" "package upg" "packa" "reve" "org time sta" "smar" "rever" "yas min" "org-mo" "snipp" "reload ya" "strai" "fon" "f" "jit" "fon" "font loc mod" "jit" "font lock deb" "fontset"))
(setq evil-ex-history '("wq" "w" "wq" "w" "wq" "w" "wq" "w" "q" "w" "q" "wq" "w" "q" "w" "wq" "w" "q" "w" "wq" "w" "q" "wq" "w" "wq" "q" "wq" "w" "wq" #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq read-expression-history '("(set-cursor-color \"#000000\")" "(system-name)" "(set-cursor-color \"#000000\")" "(seq-filter (lambda (font)
              (when-let ((info (font-info font)))
                (string-match-p \"spacing=100\" (aref info 1))))
            (font-family-list))" "(system-name)"))
(setq minibuffer-history '("/Users/sayantan/.emacs.d/" "/Users/sayantan/OrgMode/bik" "y" "/Users/sayantan/Downloads/RackhamFellowship/." "open ./build/personal-statement.pdf" "/Users/sayantan/graduate-work/Winter2022/RackhamPredoctoralFellowship/." "/Users/sayantan/OrgMode/bik" "/Users/sayantan/OrgMode/mai" "/Users/sayantan/Sync/configs/fedora-vm-setup.org" "/Users/sayantan/Sync/configs/" "/Users/sayantan/OrgMode/new-server-setup.org" "/Users/sayantan/OrgMode/ne" "repo" "/Users/sayantan/OrgMode/new-server-setup.org" "here" "/Users/sayantan/Sync/OrgMode/" "/Users/sayantan/Sync/configs/" "/Users/sayantan/OrgMode/new-server-setup.org" "Article on Radavist" "Link" "/Users/sayantan/.emacs.d/snippets/org-mode/" "/Users/sayantan/OrgMode/bik" "/Users/sayantan/OrgMode/ma" "/Users/sayantan/OrgMode/link" "/Users/sayantan/OrgMode/mai" "Link to recipe" "Link to lectures" "orm" "haskell sn" "refo" "haskell" "all-t" "latexmk" "aucte" "markdown-mo" "magit" "helm" "evil-leader" "evil" "nix-mode" "flycheck" "separedit" "undo-tree" "yasnippet" "dashboard" "evil-leader" "evil-nerd-commenter" "evil" "helm" "flycheck" "separedit" "undo-tree" "smartparens" "twilight-bright-theme" "smartparens" "async" "undo-tree" "monokai-theme" "smartparens" "async" "undo-tree" "monokai-theme" "/Users/sayantan/Sync/configs/xps13-workstation/home-manager-nix/" "/Users/sayantan/graduate-work/research-related/papers/geodesics-in-thin-part/refe" "evince ./build/main.pdf" "ma" "evince ./build/main.pdf" "tex-view" "/Users/sayantan/.emacs.d/elisp/auctex-conf.el" "open ./build/main.pdf" "/Users/sayantan/graduate-work/research-related/papers/geodesics-in-thin-part/" "Growth tight" "SCC actions" "/Users/sayantan/OrgMode/bi" "/Users/sayantan/OrgMode/bikes.org" "/Users/sayantan/.emacs.d/snippets/org-mode/" "/Users/sayantan/OrgMode/bik" "/Users/sayantan/OrgMode/bikes.org" "/Users/sayantan/.emacs.d/bo" "Komoot link" "/Users/sayantan/OrgMode/bikes.org" "/Users/sayantan/.emacs.d/snippets/org-mode/bike-ride-list" "/Users/sayantan/OrgMode/bik" "/Users/sayantan/OrgMode/bikes.org" "ThreadScope (Haskell Wiki)" "https://wiki.haskell.org/ThreadScope" "grb+" "scr" "/Users/sayantan/OrgMode/bikes.org" "ma" "/Users/sayantan/OrgMode/bikes.org" "/Users/sayantan/Sync/configs/" "/Users/sayantan/OrgMode/bikes.org" "/Users/sayantan/Sync/configs/emacs-config/elisp/emacs-general.el" "MacOS for linux sysadmins" "/CV_data/auto/" "/Users/sayantan/Sync/configs/macos-setup-guide.org" "/Users/sayantan/.emacs.d/elisp/emacs-general.el" "/Users/sayantan/Sync/configs/macos-setup-guide.org" "/Users/sayantan/graduate-work/research-related/papers/non-orientable-limit-set-v2/main"))
(setq evil-jumps-history 'nil)
